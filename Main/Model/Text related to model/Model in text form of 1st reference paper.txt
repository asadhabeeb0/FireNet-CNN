model = Sequential()
model.add(Conv2D(16, kernel_size=(3,3), activation='relu', input_shape = (64,64,3), use_bias=True))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(rate=0.5))
model.add(Conv2D(32, kernel_size=(3,3), activation='relu', use_bias=True))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(rate=0.5))
model.add(Conv2D(64, kernel_size=(3,3), activation= 'relu', use_bias=True))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(rate=0.5))
model.add(Flatten())
model.add(Dense(256, activation= 'relu', use_bias=True))
model.add(Dropout(rate=0.2))
model.add(Dense(128, activation= 'relu', use_bias=True))
model.add(Dense(2, activation='softmax', use_bias=True))
model.compile(optimizer=Adam(), loss='categorical_crossentropy', metrics=['accuracy'])